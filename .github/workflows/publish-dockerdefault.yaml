# look at fan/.github/workflows/publish.yaml as the base example for this publish file
# Also look here: https://dev.to/ken_mwaura1/automate-docker-image-builds-and-push-to-github-registry-using-github-actions-4h20
name: Build and Publish Docker Image to GitHub Packages

on:
  push: 
    branches: 
      - main
    tags:
      - '*'
    paths:
      - 'docker/**'
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository_owner }}/haxall

jobs:
  build-and-publish-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    # Unsure whether most of the below docker Github actions should be v1, v2, v3, v4, or main...
    # Maybe find some info here: https://docs.docker.com/build/ci/github-actions/
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v4

      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        
      # Cannot do this using 'docker-bake' github action, because it doesn't allow for multiple tags/labels. They need to be done individually with each their own --set option: https://github.com/docker/bake-action
      # Using https://github.com/docker/build-push-action
      - name: Build and push image with Github Actions
        uses: docker/build-push-action@v6
        with:
          #since the context is root, that's where the .dockerignore needs to be.
          context: .
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          push: true
          pull: true
          no-cache: true
          build-args: 
            DB_NAME=haxall
          file: ./docker/Dockerfile
